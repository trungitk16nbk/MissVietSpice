<div {{ block.shopify_attributes }}>
  {%- if product != blank -%}
    <product-form class="product-form">
      <div class="pr-form-error" role="alert" hidden>
        <span class="pr-form-error-text"></span>
      </div>
      {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" disabled class="product-variant-id">
        <input type="hidden" name="selling_plan" value="">
        <div class="pr-form-button">
          {%- liquid
            assign check_against_inventory = true
            if product.selected_or_first_available_variant.inventory_management != 'shopify' or  product.selected_or_first_available_variant.inventory_policy == 'continue'
              assign check_against_inventory = false
            endif
            if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
              assign quantity_rule_soldout = true
            endif
          -%}
          <button id = "ProductSubmitButton-{{ section_id }}" type="submit" name="add" class="ajax-cart-btn" {% if product.selected_or_first_available_variant.available == false or quantity_rule_soldout %} disabled {% endif %}>
            <span class="cart-title">
              {%- if product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                {{ 'products.product.sold_out' | t }}
              {%- else -%}
                {{ 'products.product.add_to_cart' | t }}
              {%- endif -%}
            </span>
            <div class="ajax-loader hidden">
             <span class="spinner-border"></span>
            </div>
          </button>
          {%- if block.settings.show_dynamic_checkout -%}
            {{ form | payment_button }}
          {%- endif -%}
        </div>
      {%- endform -%}
    </product-form>
  {%- else -%}
    <div class="product-form">
      <div class="pr-form-button form">
        <button type="submit" name="add" class="" disabled>
          {{ 'products.product.sold_out' | t }}
        </button>
      </div>
    </div>
  {%- endif -%}
</div>
<style>
.product_details_info .pr-form-button {
  display: flex;
  flex-wrap: wrap;
  margin: -15px 0 0 -15px;
  padding-top: 30px;
}
.product_details_info .pr-form-button .ajax-cart-btn {
  width: calc(50% - 15px);
  margin: 15px 0 0 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  border-radius: 3px;
  background-color: var(--color-primary);
}
.product_details_info .pr-form-button .ajax-cart-btn:hover {
  background-color: var(--color-secondary);
}
.product_details_info .pr-form-button .ajax-cart-btn .ajax-loader{
  width: 15px;
  height: 15px;
  display: none;
  align-items: center;
  justify-content: center;
}
.product_details_info .pr-form-button .ajax-cart-btn.loading .cart-title{ 
  display: none;
}
.product_details_info .pr-form-button .ajax-cart-btn.loading .ajax-loader {
  display: flex;
}
.product_details_info .pr-form-button .ajax-cart-btn .ajax-loader svg {
  fill: #fff;
}
.product_details_info .pr-form-button .shopify-payment-button {
  width: calc(50% - 15px);
  margin: 15px 0 0 15px;
}
.product_details_info .pr-form-button .shopify-payment-button button {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--color-secondary);
  color: #fff;
  border-radius: 3px;
  font-size: 14px;
  font-weight: 400;
}
.product_details_info .pr-form-button .shopify-payment-button button:hover {
  background-color: var(--color-primary);
}
.product_details_info .pr-form-button .shopify-payment-button .shopify-payment-button__more-options {
  display: none;
}
</style>


<script>
  function changePrice(productData) {
    let selectedVariantId = parseInt(document.querySelector('input[name="id"]').value);
   
    let selectedVariant;  
    for (var i = 0; i < productData.variants.length; i++) {
      if (productData.variants[i].id === selectedVariantId) {
        selectedVariant = productData.variants[i];
        break;
      }
    }
    let Price = selectedVariant.price;
    if (selectedVariant.selling_plan_allocations.length) {
      let planId = parseInt(document.querySelector('[name="selling_plan"]').value);
      for (let i = 0; i < selectedVariant.selling_plan_allocations.length; i++) {
        if (selectedVariant.selling_plan_allocations[i].selling_plan_id === planId) {
          Price = selectedVariant.selling_plan_allocations[i].price;
        }
      }
    }
    const newPrice = Price / 100;

    // Lấy phần tử span theo ID
    const productPriceElement = document.querySelector(`#ProductPrice`);
    if (productPriceElement) { // Cập nhật nội dung của thẻ span với giá tiền mới đã định dạng
      productPriceElement.innerHTML = newPrice.toLocaleString('en-US', {
        style: 'currency',
        currency: 'USD'
      });;
    }
  }

  function showSubsrciption() {
    let productData = {{product | json}};
    let changeTimeout;
    let selectedSellingPlanId = '';
    const sellingPlanContainer = document.querySelector('.selling-plan-fieldset');
    const purchaseOptionsRadio = document.querySelectorAll('input[name="purchase_option"]');
    const subscriptionPlansDiv = document.getElementById('subscription_plans');

    if (subscriptionPlansDiv) {
      selectedSellingPlanId = productData.selling_plan_groups[0].selling_plans[0].id;
      document.querySelector('[name="selling_plan"]').value = selectedSellingPlanId;
      changePrice(productData)
    }

    purchaseOptionsRadio.forEach((radio) => {
      radio.addEventListener('change', () => {
        if (radio.value === 'subscribe_and_save') {
          subscriptionPlansDiv.style.display = 'block';
          selectedSellingPlanId = document.getElementById('selling_plans').value;
        } else {
          subscriptionPlansDiv.style.display = 'none';
          selectedSellingPlanId = '';
        }
        document.querySelector('[name="selling_plan"]').value = selectedSellingPlanId;
        changePrice(productData)
      });
    });

    // Watch for selling plan option change to update the selected selling plan
    if (sellingPlanContainer){
      sellingPlanContainer.querySelectorAll('select').forEach(function(optionSelector) {
        optionSelector.addEventListener('change', function() {
          selectedSellingPlanId = optionSelector.value;
          selectedSellingPlanId = (typeof selectedSellingPlanId === 'undefined') ? '' : selectedSellingPlanId;
          document.querySelector('[name="selling_plan"]').value = selectedSellingPlanId;
          changePrice(productData)
        });
      });
    }
    if (document.querySelector(`.variant-option-block`)){
      document.querySelector(`.variant-option-block`).addEventListener('change', function() {
        clearTimeout(changeTimeout); // Xóa bất kỳ timeout nào còn đang chờ
        changeTimeout = setTimeout(() => {
          changePrice(productData)
        }, 500);
      });
    }
   
  }

  // quick view
  function changePrice2(productData) {
    const variantElement = document.querySelectorAll('input[name="id"]');
    let selectedVariantId = parseInt(variantElement[variantElement.length - 1].value);

    let selectedVariant;
    for (var i = 0; i < productData.variants.length; i++) {
      if (productData.variants[i].id === selectedVariantId) {
        selectedVariant = productData.variants[i];
        break;
      }
    }

    if (!selectedVariant) {
      selectedVariant = productData.variants[0];
    }


    let Price = selectedVariant.price;
    if (selectedVariant.selling_plan_allocations.length) {
      const sellingPlanElement = document.querySelectorAll('[name="selling_plan"]');
      let planId = parseInt(sellingPlanElement[sellingPlanElement.length - 1].value);
      for (let i = 0; i < selectedVariant.selling_plan_allocations.length; i++) {
        if (selectedVariant.selling_plan_allocations[i].selling_plan_id === planId) {
          Price = selectedVariant.selling_plan_allocations[i].price;
        }
      }
    }

    const newPrice = Price / 100;
    // Lấy phần tử span theo ID
    const productPriceElementAll = document.querySelectorAll(`#ProductPrice`);
    const productPriceElement = productPriceElementAll[productPriceElementAll.length - 1];
    if (productPriceElement) { // Cập nhật nội dung của thẻ span với giá tiền mới đã định dạng
      productPriceElement.innerHTML = newPrice.toLocaleString('en-US', {
        style: 'currency',
        currency: 'USD'
      });;
    }
  }

  function showSubsrciption2() {
    let productData = {{product | json}};
    let changeTimeout;
    let selectedSellingPlanId = '';
    const sellingPlanContainerAll = document.querySelectorAll('.selling-plan-fieldset');
    const sellingPlanContainer = sellingPlanContainerAll[sellingPlanContainerAll.length - 1];
    const purchaseOptionsRadio = sellingPlanContainer.querySelectorAll('input[name="purchase_option"]');
    const subscriptionPlansDiv = sellingPlanContainer.querySelector('#subscription_plans');
   


    if (subscriptionPlansDiv) {
      selectedSellingPlanId = productData.selling_plan_groups[0].selling_plans[0].id;
      const sellingPlanElement = document.querySelectorAll('[name="selling_plan"]');
      sellingPlanElement[sellingPlanElement.length - 1].value = selectedSellingPlanId;
      changePrice2(productData);
    }

    purchaseOptionsRadio.forEach((radio) => {
      radio.addEventListener('change', () => {
        if (radio.value === 'subscribe_and_save') {
          subscriptionPlansDiv.style.display = 'block';
          selectedSellingPlanId = document.getElementById('selling_plans').value;
        } else {
          subscriptionPlansDiv.style.display = 'none';
          selectedSellingPlanId = '';
        }
        const sellingPlanElement = document.querySelectorAll('[name="selling_plan"]');
        sellingPlanElement[sellingPlanElement.length - 1].value = selectedSellingPlanId;
        changePrice2(productData)
      });
    });


    // Watch for selling plan option change to update the selected selling plan
    if (sellingPlanContainer){
      sellingPlanContainer.querySelectorAll('select').forEach(function(optionSelector) {
        optionSelector.addEventListener('change', function() {
          selectedSellingPlanId = optionSelector.value;
          selectedSellingPlanId = (typeof selectedSellingPlanId === 'undefined') ? '' : selectedSellingPlanId;
          const sellingPlanElement = document.querySelectorAll('[name="selling_plan"]');
          sellingPlanElement[sellingPlanElement.length - 1].value = selectedSellingPlanId;
          changePrice2(productData)
        });
      });
      const variantOptionElement = document.querySelectorAll(`.variant-option-block`);
      if (variantOptionElement){
        variantOptionElement[variantOptionElement.length - 1].addEventListener('change', function() {
          clearTimeout(changeTimeout); // Xóa bất kỳ timeout nào còn đang chờ
          changeTimeout = setTimeout(() => {
            changePrice2(productData)
          }, 500);
        });
      }
    }  
  }

  if (check) {
    showSubsrciption2();
  }
  else {
    showSubsrciption();
  }


</script> 